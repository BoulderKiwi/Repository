How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It narrowed down the volume of text that I needed to view. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	Spotting errors is faster as it narrows any differeces and hold code that had been discarded
	could be used later or determined to be better

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: old versions aren't written over
    Con: potential to loose information if not saved

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

   	since many files in a repository are 'linked', no harm in salving all code
   	to make sure that logical changes are saved accossed files in a repository

How can you use the commands git log and git diff to view the history of files?

    git log allows me to pull the commits from a repository, therefore showing different git commit ids to compare and allows me to view the description of each. 
    git diff : allows me to view the history of different versions

How might using version control make you more confident to make changes that
could break something?

	knowing that I can go back and check which version had a bug by running a program makes finding the bug easier

Now that you have your workspace set up, what do you want to try using Git for?

data analysis  